'AllStocksAnalysisRefactored_2018_Module8

Sub AllStocksAnalysisRefactored2018()

    Dim startTime As Single
    
    Dim endTime  As Single

    yearValue = InputBox("2018")

    startTime = Timer
    
    'Format the output sheet on All Stocks Analysis worksheet for 2018
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (2018)"
    
    'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    'Initialize array of all tickers
    Dim tickers(12) As String
    
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
    
    'Activate data worksheet for 2018
    Worksheets("2018").Activate
    
    'Get the number of rows to loop over
    RowCount = ActiveSheet.Cells(Rows.Count, "A").End(xlUp).Row
    
    'Create a ticker Index
    Dim tickerIndex As Double
    tickerIndex = 0
    ticker = tickers(i)

    'Create three output arrays for the following:
    ReDim tickerVolume(12) As Long
    
    ReDim tickerStartingPrices(12) As Single
    
    ReDim tickerEndingPrices(12) As Single
    
    Worksheets("2018").Activate
    
    'Create a for loop to initialize the tickerVolumes to zero.
    
    For i = 0 To 11

        
    tickerVolume(i) = 0
    
    Next i
    
    'Loop over all the rows in the spreadsheet.
    Worksheets("2018").Activate
    
    For i = 2 To RowCount
    
        'Increase volume for current ticker
        
                tickerVolume(tickerIndex) = tickerVolume(tickerIndex) + ActiveSheet.Cells(i, 8).Value
        
    
        
        'Check if the current row is the first row with the selected tickerIndex.
        'If  Then for the current starting price
            
            If ActiveSheet.Cells(i - 1, 1).Value <> tickers(tickerIndex) Then
    
       
       
                tickerStartingPrices(tickerIndex) = ActiveSheet.Cells(i, 6).Value
               
            
            End If
            
            
        'End If
        
        'Check if the current row is the last row with the selected ticker
        ''this closes the price to ending price
        'If  Then
            
            
            
            If ActiveSheet.Cells(i + 1, 1).Value <> tickers(tickerIndex) Then
       
                tickerEndingPrices(tickerIndex) = ActiveSheet.Cells(i, 6).Value
                
                'increase the tickerIndex
                tickerIndex = tickerIndex + 1
       
            
            End If
        'End If
    
    Next i
    
    'Loop through your arrays to output the Ticker, Total Daily Volume, and Return.
   For i = 1 To 11
   
    Worksheets("All Stocks Analysis").Activate
    tickerIndex = i
        Cells(4 + i, 1).Value = tickers(tickerIndex)
    
        Cells(4 + i, 2).Value = tickerVolume(tickerIndex)
        
        Cells(4 + i, 3).Value = tickerEndingPrices(tickerIndex) / tickerStartingPrices(tickerIndex) - 1
        
        
    Next i
    
    'Formatting for vistual and numeric results
    Worksheets("All Stocks Analysis").Activate
    Range("A3:C3").Font.FontStyle = "Bold"
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("B4:B15").NumberFormat = "#,##0"
    Range("C4:C15").NumberFormat = "0.0%"
    Columns("B").AutoFit

    dataRowStart = 4
    dataRowEnd = 15

    For i = dataRowStart To dataRowEnd
        
        If Cells(i, 3) > 0 Then
            
            Cells(i, 3).Interior.Color = vbGreen
            
        Else
        
            Cells(i, 3).Interior.Color = vbRed
            
        End If
        
Next i
 
    endTime = Timer
    'Pop- up message bok to show the elapsed run time for the scrip and the year
    MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & (2018)

End Sub

